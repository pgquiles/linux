/dts-v1/;
/{
	compatible = "AMLOGIC,T826_G9BB";
	model = "AMLOGIC G9BB T826";
	interrupt-parent = <&gic>;
	#address-cells = <1>;
	#size-cells = <1>;



/// ****************************************************************************
///	-	CPU
//$$ MODULE="CPU"
	cpus {
		#address-cells = <1>;
		#size-cells = <0>;

		//$$ DEVICE="cpu0"
		cpu@0 {
			device_type = "cpu";
			compatible = "arm,cortex-a5";
			reg = <0x200>;
		};

		//$$ DEVICE="cpu1"
		cpu@1 {
			device_type = "cpu";
			compatible = "arm,cortex-a5";
			reg = <0x1>;
		};

		//$$ DEVICE="cpu2"
		cpu@2 {
			device_type = "cpu";
			compatible = "arm,cortex-a5";
			reg = <0x2>;
		};

		//$$ DEVICE="cpu3"
		cpu@3 {
			device_type = "cpu";
			compatible = "arm,cortex-a5";
			reg = <0x3>;
		};
	};



/// ****************************************************************************
///	-	Cache
//$$ MODULE="Cache"
//$$ DEVICE="cache"
	cache-controller {
		compatible = "arm,meson-pl310-cache";
		reg = <0xc4200000 0x1000>;
		arm,data-latency = <3 3 3>;
		arm,tag-latency = <2 2 2>;
		arm,filter-ranges = <0x100000 0xc0000000>;
		cache-unified;
		cache-level = <2>;
		aux-instruction_prefetch;
		aux-data_prefetch;
		aux-ns_lockdown;
		aux-force_no_write_alloc;
		aux-cache_replace_policy_round_robin;
		aux-early_write_response;
		aux-full_line_of_zero;
		aux-ns_int_ctrl;
		aux-share_override;
		prefetch-double_line_fill;
		prefetch-prefetch_drop;
		prefetch-prefetch_offset = <7>;
	};



/// ****************************************************************************
///	-	Memory
//$$ MODULE="Memory"
//$$ DEVICE="memory"
//$$ L2 PROP_U32 = "aml_reserved_start"
//$$ L2 PROP_U32 = "aml_reserved_end"
//$$ L2 PROP_U32 6 = "linux,usable-memory"
	memory {
		device_type = "memory";
		aml_reserved_start = <0x06000000>; /**reserved memory start */
		aml_reserved_end = <0x05000000>;/**reserved memory end : dtb start for uboot*/
		phys_offset = <0x00200000>;
		linux,total-memory = <0x3fe00000>; // 1G reference m8b
        #address-cells = <1>;
        #size-cells = <1>;

        cma_0:region@0 {
           region_name = "cma_0";
           reg = <0 0x01200000>;
           linux,contiguous-region;
        };
	};



/// ****************************************************************************
///	-	GIC
//$$ MODULE="GIC"
//$$ DEVICE="gic"
	gic:interrupt-controller {
		compatible = "arm,cortex-a9-gic";
		reg = <0xc4301000 0x1000
		       0xc4300100 0x0100>;
		interrupt-controller;
		#interrupt-cells = <3>;
		#address-cells = <0>;
	};




/// ****************************************************************************
///	-	Power
//$$ MODULE="Power"
//$$ DEVICE="dvfs"
//$$ L2 PROP_STR = "status"
	dvfs {
		compatible = "amlogic, amlogic-dvfs"; /** fixed for driver, don't change */
		#address-cells = <1>;
		#size-cells = <0>;
		status = "ok";

//$$ L2 PROP_U32 = "dvfs_id"
//$$ L2 PROP_U32 = "table_count"
//$$ L2 PROP_U32 16*3 = "dvfs_table"
	vcck_dvfs {
		dvfs_id     = <1>;  /** must be value of (1 << n)            */
		table_count = <13>; /** must be correct count for dvfs_table */
		dvfs_table  = <
			/* NOTE: frequent in this table must be ascending order */
			/* frequent(Khz)    min_uV      max_uV                  */
			  96000		 890000		 890000
			 192000		 890000		 890000
			 312000		 890000		 890000
			 408000		 890000		 890000
			 504000		 890000		 890000
			 600000		 890000		 890000
			 720000		 890000		 890000
			 816000		 900000		 900000
			1008000		 920000		 920000
			1200000		 970000		 970000
			1320000		1020000		1020000
			1488000		1100000		1100000
			1536000		1140000		1140000
			>;
		};
	};

//$$ DEVICE="meson_vcck_dvfs_driver"
//$$ L2 PROP_STR = "status"
//$$ L2 PROP_STR = "pinctrl-names"
//$$ L2 PROP_CHOICE "meson_vcck_dvfs_pin_0_match" = "pinctrl-0"
//$$ L2 PROP_U32 = "use_pwm"
//$$ L2 PROP_U32 = "table_count"
//$$ L2 PROP_U32 16*2 = "cs_voltage_table"
	meson_vcck_dvfs_driver {
		compatible = "amlogic, meson_vcck_dvfs";
		dev_name = "meson_vcck_dvfs_driver";
		status = "ok";
		pinctrl-names = "default";
		pinctrl-0 = <&aml_pwm_pins>;
		use_pwm = <1>;
		pmw_controller = "PWM_F";
		table_count = <29>;
		cs_voltage_table = <
		/*
		 * Note: This table is hardware depended, If your hardware use PWM method,
		 * then first line in this table is PWM register value, second line is
		 * voltage of VCCK according this PWM register value. If your platform use
		 * constant-current source to adjust vcck voltage, then the first line should
		 * set to 0, means not valid, member 'use_pwm' in this node should set to 0.
		 *
		 *  ---- This table must be in ascending order by voltage ----
		 *
		 *  PWM value       VCCK voltage
		 */
		0x1c0000	890000
		0x1b0001	900000
		0x1a0002	910000
		0x190003	920000
		0x180004	940000
		0x170005	950000
		0x160006	960000
		0x150007	970000
		0x140008	980000
		0x130009	990000
		0x12000a	1000000
		0x11000b	1010000
		0x10000c	1020000
		0x0f000d	1030000
		0x0e000e	1050000
		0x0d000f	1060000
		0x0c0010	1070000
		0x0b0011	1080000
		0x0a0012	1090000
		0x090013	1100000
		0x080014	1110000
		0x070015	1120000
		0x060016	1130000
		0x050017	1140000
		0x040018	1160000
		0x030019	1170000
		0x02001a	1180000
		0x01001b	1190000
		0x00001c	1200000
        >;
	};



/// ****************************************************************************
///	-	UART
//$$ MODULE="UART"
//$$ DEVICE="uart_ao"
//$$ L2 PROP_STR = "status"
//$$ L2 PROP_STR = "pinctrl-names"
//$$ L3 PROP_CHOICE "uart_ao_pin_match" = "pinctrl-0"
	uart_ao {
		compatible = "amlogic,aml_uart";
		port_name = "uart_ao";
		status = "okay";
		dev_name = "uart_ao";
		pinctrl-names = "default";
		pinctrl-0 = <&ao_uart_pins>;
	};

	//$$ DEVICE="uart_0"
	//$$ L2 PROP_STR = "status"
	uart_0 {
		compatible = "amlogic,aml_uart";
		port_name = "uart_a";
		status = "okay";
		dev_name = "uart_0";
		//pinctrl-names = "default";
		//pinctrl-0 = <&a_uart_pins>;
	};

	//$$ DEVICE="uart_1"
	//$$ L2 PROP_STR = "status"
	uart_1 {
		compatible = "amlogic,aml_uart";
		port_name = "uart_b";
		status = "okay";
		dev_name = "uart_1";
		pinctrl-names = "default";
		pinctrl-0 = <&b_uart_pins>;
	};

	//$$ DEVICE="uart_2"
	//$$ L2 PROP_STR = "status"
	uart_2 {
		compatible = "amlogic,aml_uart";
		port_name = "uart_c";
		status = "disabled";
		dev_name = "uart_2";
	};

	//$$ DEVICE="uart_3"
	//$$ L2 PROP_STR = "status"
	uart_3 {
		compatible = "amlogic,aml_uart";
		port_name = "uart_d";
		status = "disabled";
		dev_name = "uart_3";
	};




/// ****************************************************************************
///	-	Input
//$$ DEVICE="saradc"
//$$ L2 PROP_STR = "status"
	saradc {
		compatible = "amlogic,saradc";
		status = "okay";
	};

//$$ DEVICE="adc_keypad"
//$$ L2 PROP_STR = "status"
//$$ L2 PROP_STR = "key_name"
//$$ L2 PROP_U32 = "key_num"
//$$ L2 PROP_U32 2 = "key_code"
//$$ L2 PROP_U32 2 = "key_chan"
//$$ L2 PROP_U32 2 = "key_val"
//$$ L2 PROP_U32 2 = "key_tolerance"
	adc_keypad {
		compatible = "amlogic,adc_keypad";
		status = "disabled";
		key_name = "enter", "left","right";
		key_num = <3>;
		key_code = <28 105 106>;
		key_chan = <0 0 0>;
		key_val = <0 460 900>;
		key_tolerance = <40 40 40>;
	};




/// ****************************************************************************
//$$ DEVICE="meson-remote"
//$$ L2 PROP_STR = "status"
//$$ L2 PROP_U32 = "ao_baseaddr"
//$$ L2 PROP_STR = "pinctrl-names"
//$$ L2 PROP_CHOICE "remote_pin_0_match" = "pinctrl-0"
	meson-remote{
		compatible = "amlogic,aml_remote";
		dev_name = "meson-remote";
		status = "ok";
		ao_baseaddr = <0xf3100480>;
		pinctrl-names="default";
		pinctrl-0=<&remote_pins>;
	};




/// ****************************************************************************
//$$ DEVICE="meson-eth"
//$$ L2 PROP_STR = "status"
	ethmac: ethernet@0xc9410000{
			compatible = "amlogic,mesong9tv-rmii-dwmac", "snps,dwmac";
			reg = <0xc9410000 0x10000
				0xc1108108 0x4>;
			interrupts = <0 8 1>;
			interrupt-names = "macirq";
			clocks = "clk81";
			clock-names = "stmmaceth";
	};
/// ***************************************************************************************
///     -       Bluetooth
//$$ MODULE="Bluetooth"
//$$ DEVICE="bt-dev"
//$$ L2 PROP_STR = "status"
//$$ L2 PROP_STR = "gpio_reset"
    bt-dev{
        compatible = "amlogic,bt-dev";
        dev_name = "bt-dev";
        status = "ok";
        gpio_reset = "GPIOAO_5";
    };
/// ***************************************************************************************
///     -       WiFi
//$$ MODULE="WiFi"
//$$ DEVICE="aml_broadcm_wifi"
//$$ L2 PROP_STR = "status"
//$$ L2 PROP_STR = "interrupt_pin"
//$$ L2 PROP_U32 = "irq_num"
//$$ L2 PROP_STR = "irq_trigger_type"
//$$ L2 PROP_STR = "power_on_pin"
//$$ L2 PROP_STR = "clock_32k_pin"
    wifi{
                compatible = "amlogic,aml_broadcm_wifi";
                dev_name = "aml_broadcm_wifi";
                status = "okay";
                interrupt_pin = "GPIOAO_4";
                irq_num = <4>;
                irq_trigger_type = "GPIO_IRQ_HIGH";
                power_on_pin = "GPIOAO_13";
 //               power_on_pin2 = "GPIOX_11";
                clock_32k_pin = "GPIOH_7";
        };
//$$ DEVICE="wifi_power"
//$$ L2 PROP_STR = "status"
//$$ L2 PROP_STR = "power_gpio"
//	wifi_power{
//		compatible = "amlogic,wifi_power";
//		dev_name = "wifi_power";
//		status = "okay";
//		power_gpio = "GPIOH_8";
//	};



/// ****************************************************************************
///	-	Cpufreq
//$$ MODULE="Cpufreq"
//$$ DEVICE="cpufreq-meson"
//$$ L2 PROP_STR = "status"
	cpufreq-meson {
		compatible = "amlogic,cpufreq-meson";
		status = "okay";
	};



/// ****************************************************************************
///	-	WATCHDOG
	amlogic-watchdog {
		compatible = "amlogic,aml-wdt";
		status = "disable";
		default_timeout=<8>;
		reset_watchdog_method=<1>;//0:sysfs,1:kernel
		reset_watchdog_time=<2>;
		shutdown_timeout=<10>;
		firmware_timeout=<6>;
		suspend_timeout=<6>;
	};



/// ***************************************************************************************
///	-	Securitykey
//$$ MODULE="Securitykey"
//$$ DEVICE="securitykey"
//$$ L2 PROP_STR = "status"
	securitykey {
		compatible = "amlogic,aml_keys";
		status = "ok";
	};



/// ****************************************************************************
///	-	MMC
//$$ MODULE="MMC"
//$$ DEVICE="aml_sdio"
//$$ L2 PROP_STR = "status"
//$$ L3 PROP_U32 2 ="reg"
//$$ L2 PROP_STR 7 = "pinctrl-names"
//$$ L2 PROP_CHOICE "sdio_pin_0_match" = "pinctrl-0"
//$$ L2 PROP_CHOICE "sdio_pin_1_match" = "pinctrl-1"
//$$ L2 PROP_CHOICE "sdio_pin_2_match" = "pinctrl-2"
//$$ L2 PROP_CHOICE "sdio_pin_3_match" = "pinctrl-3"
//$$ L2 PROP_CHOICE "sdio_pin_4_match" = "pinctrl-4"
//$$ L2 PROP_CHOICE "sdio_pin_5_match" = "pinctrl-5"
//$$ L2 PROP_CHOICE "sdio_pin_6_match" = "pinctrl-6"
	sdio {
		compatible = "amlogic,aml_sdio";
		dev_name = "aml_sdio.0";
		status = "okay";
		reg = <0xc1108c20 0x20>;
		pinctrl-names = "sd_clk_cmd_pins", "sd_all_pins", "emmc_clk_cmd_pins", "emmc_all_pins", "sdio_clk_cmd_pins", "sdio_all_pins","sd_1bit_pins"; // "jtag_pin", "uartao_default";
		pinctrl-0 = <&sd_clk_cmd_pins>;
		pinctrl-1 = <&sd_all_pins>;
		pinctrl-2 = <&emmc_clk_cmd_pins>;
		pinctrl-3 = <&emmc_all_pins>;
//		pinctrl-4 = <&sdio_clk_cmd_pins>;
//		pinctrl-5 = <&sdio_all_pins>;
		pinctrl-6 = <&sd_1bit_pins>;

		//$$ DEVICE="sd"
		//$$ L2 PROP_STR = "status"
		//$$ L3 PROP_U32 = "port"
		//$$ L2 PROP_STR = "pinname"
		//$$ L3 PROP_U32 = "ocr_avail"
		//$$ L2 PROP_STR 3 = "caps"
		//$$ L3 PROP_U32 = "f_min"
		//$$ L3 PROP_U32 = "f_max"
		//$$ L3 PROP_U32 = "f_max_w"
		//$$ L3 PROP_U32 = "max_req_size"
		//$$ L2 PROP_STR = "gpio_dat3"
		//$$ L2 PROP_STR = "jtag_pin"
		//$$ L2 PROP_STR = "gpio_cd"
		//$$ L2 PROP_STR = "gpio_ro"
		//$$ L2 PROP_U32 = "irq_in"
		//$$ L2 PROP_U32 = "irq_out"
		//$$ L2 PROP_U32 = "card_type"
//		sd {
//			status = "okay";
//			port = <1>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
//			pinname = "sd";
//			ocr_avail = <0x200000>;          /**VDD voltage 3.3 ~ 3.4 */
//			caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED";
//			f_min = <300000>;
//			f_max = <50000000>;
//			f_max_w = <50000000>;
//			max_req_size = <0x20000>;          /**128KB*/
//			gpio_dat3 = "CARD_4";
//			jtag_pin = "CARD_0";
//			gpio_cd = "CARD_6";
//			//        gpio_ro = "GPIODV_25";
//			irq_in = <3>;
//			irq_out = <5>;
//			card_type = <5>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
//		};

		//$$ DEVICE="emmc"
		//$$ L2 PROP_STR = "status"
		//$$ L3 PROP_U32 = "port"
		//$$ L2 PROP_STR = "pinname"
		//$$ L3 PROP_U32 = "ocr_avail"
		//$$ L2 PROP_STR 4 = "caps"
		//$$ L3 PROP_U32 = "f_min"
		//$$ L3 PROP_U32 = "f_max"
		//$$ L3 PROP_U32 = "f_max_w"
		//$$ L3 PROP_U32 = "max_req_size"
		//$$ L2 PROP_STR = "gpio_dat3"
		//$$ L2 PROP_U32 = "card_type"
//		emmc {
//			status = "ok";
//
//			port = <2>;
//			pinname = "emmc";
//			ocr_avail = <0x200000>; // 3.3:0x200000, 1.8+3.3:0x00200080
//			caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE","MMC_CAP_ERASE", "MMC_CAP_HW_RESET"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
//			//	caps2 = "MMC_CAP2_HS200_1_8V_SDR";
//			f_min = <300000>;
//			f_max = <50000000>;
//			f_max_w = <50000000>;
//			max_req_size = <0x20000>; // 128KB
//			gpio_dat3 = "BOOT_3";
//			card_type = <1>;
//		};

//$$ DEVICE="sdio"
//$$ L2 PROP_STR = "status"
//$$ L3 PROP_U32 = "port"
//$$ L2 PROP_STR = "pinname"
//$$ L3 PROP_U32 = "ocr_avail"
//$$ L2 PROP_STR 4 = "caps"
//$$ L3 PROP_U32 = "f_min"
//$$ L3 PROP_U32 = "f_max"
//$$ L3 PROP_U32 = "max_req_size"
//$$ L2 PROP_U32 = "card_type"
		sdio{
			status = "ok";
			port = <1>;          /*0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
			pinname = "sd";
			ocr_avail = <0x200000>;          /*VDD voltage 3.3 ~ 3.4 */
			caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE";
			f_min = <300000>;
			f_max = <50000000>;
			max_req_size = <0x20000>;          /**128KB*/
			card_type = <3>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
		};
	}; /* sdio end*/


/// ****************************************************************************
///	-	MMC
//$$ MODULE="MMC"
//$$ DEVICE="aml_sdhc"
//$$ L2 PROP_STR = "status"
//$$ L3 PROP_U32 2 ="reg"
//$$ L2 PROP_STR 6 = "pinctrl-names"
//$$ L2 PROP_CHOICE "sdhc_pin_0_match" = "pinctrl-0"
//$$ L2 PROP_CHOICE "sdhc_pin_1_match" = "pinctrl-1"
//$$ L2 PROP_CHOICE "sdhc_pin_2_match" = "pinctrl-2"
//$$ L2 PROP_CHOICE "sdhc_pin_3_match" = "pinctrl-3"
//$$ L2 PROP_CHOICE "sdhc_pin_4_match" = "pinctrl-4"
//$$ L2 PROP_CHOICE "sdjc_pin_5_match" = "pinctrl-5"
// L2 PROP_CHOICE "sdhc_pin_6_match" = "pinctrl-6"
	sdhc {
		compatible = "amlogic,aml_sdhc";
		dev_name = "aml_sdhc.0";
		status = "okay";
		reg = <0xc1108e00 0x3c>;
		pinctrl-names = "sdhc_sd_clk_cmd_pins", "sdhc_sd_all_pins", "sdhc_emmc_clk_cmd_pins", "sdhc_emmc_all_pins", "sdhc_sdio_clk_cmd_pins", "sdhc_sdio_all_pins";
		pinctrl-0 = <&sdhc_sd_clk_cmd_pins>;
		pinctrl-1 = <&sdhc_sd_all_pins>;
		pinctrl-2 = <&sdhc_emmc_clk_cmd_pins>;
		pinctrl-3 = <&sdhc_emmc_all_pins>;
//		pinctrl-4 = <&sdhc_sdio_clk_cmd_pins>;
//		pinctrl-5 = <&sdhc_sdio_all_pins>;
		//pinctrl-6 = <&sd_1bit_pins>;

		//$$ DEVICE="sd"
		//$$ L2 PROP_STR = "status"
		//$$ L3 PROP_U32 = "port"
		//$$ L2 PROP_STR = "pinname"
		//$$ L3 PROP_U32 = "ocr_avail"
		//$$ L2 PROP_STR 3 = "caps"
		//$$ L3 PROP_U32 = "f_min"
		//$$ L3 PROP_U32 = "f_max"
		//$$ L3 PROP_U32 = "f_max_w"
		//$$ L3 PROP_U32 = "max_req_size"
		//$$ L2 PROP_STR = "gpio_dat3"
		//$$ L2 PROP_STR = "jtag_pin"
		//$$ L2 PROP_STR = "gpio_cd"
		//$$ L2 PROP_STR = "gpio_ro"
		//$$ L2 PROP_U32 = "irq_in"
		//$$ L2 PROP_U32 = "irq_out"
		//$$ L2 PROP_U32 = "card_type"
//		sd{
//			status = "okay";
//			port = <4>;          /**0:sdhc_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
//			pinname = "sd";
//			ocr_avail = <0x00200080>; // 3.3:0x200000, 1.8+3.3:0x00200080
//			caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED","MMC_CAP_UHS_SDR12","MMC_CAP_UHS_SDR25","MMC_CAP_UHS_SDR50","MMC_CAP_UHS_SDR104";
//			f_min = <300000>;
//			f_max = <100000000>;
//			max_req_size = <0x20000>;          /**128KB*/
//			gpio_dat3 = "CARD_4";
//			//jtag_pin = "CARD_0";
//			gpio_cd = "CARD_6";
//			//gpio_ro = "GPIOZ_0";
//			irq_in = <3>;
//			irq_out = <5>;
//			card_type = <5>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
//		};

		//$$ DEVICE="emmc"
		//$$ L2 PROP_STR = "status"
		//$$ L3 PROP_U32 = "port"
		//$$ L2 PROP_STR = "pinname"
		//$$ L3 PROP_U32 = "ocr_avail"
		//$$ L2 PROP_STR 4 = "caps"
		//$$ L3 PROP_U32 = "f_min"
		//$$ L3 PROP_U32 = "f_max"
		//$$ L3 PROP_U32 = "f_max_w"
		//$$ L3 PROP_U32 = "max_req_size"
		//$$ L2 PROP_STR = "gpio_dat3"
		//$$ L2 PROP_U32 = "card_type"
		emmc {
			status = "okay";
			port = <5>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
			pinname = "emmc";
			ocr_avail = <0x200080>;          /**VDD voltage 3.3 ~ 3.4 */
			caps = "MMC_CAP_8_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE","MMC_CAP_ERASE", "MMC_CAP_HW_RESET"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
			caps2 = "MMC_CAP2_HS200_1_8V_SDR";
			f_min = <300000>;
			f_max = <100000000>;
			max_req_size = <0x20000>;          /**128KB*/
			gpio_dat3 = "BOOT_3";
			card_type = <1>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
		};

		//$$ DEVICE="sdio"
		//$$ L2 PROP_STR = "status"
		//$$ L3 PROP_U32 = "port"
		//$$ L2 PROP_STR = "pinname"
		//$$ L3 PROP_U32 = "ocr_avail"
		//$$ L2 PROP_STR 4 = "caps"
		//$$ L3 PROP_U32 = "f_min"
		//$$ L3 PROP_U32 = "f_max"
		//$$ L3 PROP_U32 = "max_req_size"
		//$$ L2 PROP_U32 = "card_type"
//		sdio {
//			status = "okay";
//			port = <3>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
//			pinname = "sdio";
//			ocr_avail = <0x00200080>; // 3.3:0x200000, 1.8+3.3:0x00200080
//			caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE", "MMC_CAP_UHS_SDR12","MMC_CAP_UHS_SDR25","MMC_CAP_UHS_SDR50","MMC_CAP_UHS_SDR104";
//			f_min = <300000>;
//			f_max = <100000000>;
//			max_req_size = <0x20000>;          /**128KB*/
//			card_type = <3>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
//		};
	}; /* sdhc end*/


/// ****************************************************************************
///	-	I2C
//$$ DEVICE = "I2C_A"
//$$ L2 PROP_STR = "status"
//$$ L3 PROP_U32 2 ="reg"
//$$ L3 PROP_STR = "pinctrl-names"
//$$ L2 PROP_CHOICE "I2C_A_pin_match" = "pinctrl-0"
    i2c@c1108500{ /*I2C-A*/
		compatible = "amlogic,aml_i2c";
		dev_name = "i2c-A";
		status = "ok";
		reg = <0xc1108500 0x20>;
		device_id = <1>;
		pinctrl-names="default";
		pinctrl-0=<&a_i2c_master>;
		#address-cells = <1>;
		#size-cells = <0>;
		use_pio = <0>;
		master_i2c_speed = <100000>;
	};

/// ****************************************************************************
///	-	I2C
//$$ MODULE="I2C"
//$$ DEVICE="I2C_B"
//$$ L2 PROP_STR = "status"
//$$ L3 PROP_U32 2="reg"
//$$ L3 PROP_STR = "pinctrl-names"
//$$ L2 PROP_CHOICE "I2C_B_pin_match" = "pinctrl-0"
	i2c@c11087c0{ /*I2C-B*/
		compatible = "amlogic,aml_i2c";
		dev_name = "i2c-B";
		status = "ok";
		reg = <0xc11087c0 0x20>;
		device_id = <2>;
		pinctrl-names="default";
		pinctrl-0=<&b_i2c_master>;
		#address-cells = <1>;
		#size-cells = <0>;
		use_pio = <0>;
		master_i2c_speed = <300000>;
	};



/// ****************************************************************************
///	-	VPU
//$$ MODULE="VPU"
//$$ DEVICE="vpu"
//$$ L2 PROP_STR = "status"
//$$ L2 PROP_U32 = "clk_level"
    vpu{
		compatible = "amlogic,vpu";
		dev_name = "vpu";
		status = "ok";
		clk_level = <3>;
		/**    	0: 106.25M		1: 127.5M		2: 159.375M
				3: 182.15M		4: 212.5M	 */
	};

/// **************************************************************************************
/// -   DISP&MM-FB
//$$ MODULE = "DISP&MM-FB"
//$$ DEVICE = "mesonfb"
//$$ L2 PROP_STR = "status"
//$$ L3 PROP_U32 4 ="reg"
//$$ L2 PROP_U32 = "vmode"
//$$ L2 PROP_U32 5 = "display_size_default"
	mesonfb{
			compatible = "amlogic,mesonfb";
			dev_name = "mesonfb";
			status = "okay";
			reserve-memory = <0x00c00000  0x00100000>;
			reserve-iomap = "true";
			vmode = <1>; /**0:VMODE_720P 1:VMODE_LCD  2:VMODE_LVDS_1080P 3:VMODE_1080P*/
			display_size_default = <1280 800 1280 2400 32>; //1280*800*4*3 
			};

	continuemem{
                compatible = "amlogic,contimuemem";
                dev_name = "contimuemem";
                reserve-memory = <0x06100000>; // 88M deinterlace+vdec
	};


//$$ DEVICE="deinterlace"
//$$ L2 PROP_STR = "status"
//$$ L2 PROP_U32 2 = "reg"
	deinterlace{
		compatible = "amlogic,deinterlace";
		dev_name = "deinterlace";
		status = "ok";
		share-memory-name = "continuemem0";
                share-memory-offset = <0>;
		reserve-memory = <0x02100000>; //10x1920x1088x3/2=33M
	};

/// ***************************************************************************************
///	-	DISP&MM-A/V stream
//$$ MODULE = "DISP&MM-A/V stream"
//$$ DEVICE="mesonstream"
//$$ L2 PROP_STR = "status"
//$$ L3 PROP_U32 4 ="reg"
	mesonstream{
		compatible = "amlogic,mesonstream";
		dev_name = "mesonstream.0";
		status = "okay";
		reserve-memory = <0x02000000>; // 32M
		//reserve-iomap = "true";
	};

/// ***************************************************************************************
///     -       DISP&MM-A/V stream
//$$ MODULE = "DISP&MM-A/V video dec"
//$$ DEVICE="vdec"
//$$ L2 PROP_STR = "status"
//$$ L3 PROP_U32 4 ="reg"
        vdec{
                compatible = "amlogic,vdec";
                dev_name = "vdec.0";
                status = "okay";
                share-memory-name = "continuemem0";
                share-memory-offset = <0x02100000>;
                share-memory-size = <0x04000000>; //64M
//		reserve-iomap = "true";
        };
///	-	picture decoder
//$$ MODULE="picture decoder"
//$$ DEVICE="picdec"
//$$ L2 PROP_STR = "status"
//$$ L3 PROP_U32 2 ="reg"
    picdec{
		compatible = "amlogic,picdec";
		dev_name = "picdec";
		status = "okay";
                share-memory-name = "continuemem0";
                share-memory-offset = <0x02100000>;
                share-memory-size = <0x04000000>; //64M
	};



/// ***************************************************************************************
///	-	DISP&MM-PostProcess
//$$ MODULE="DISP&MM-PostProcess"
//$$ DEVICE="ppmgr"
//$$ L2 PROP_STR = "status"
//$$ L3 PROP_U32 2 ="reg"
    ppmgr{
		compatible = "amlogic,ppmgr";
		dev_name = "ppmgr";
		status = "okay";
		reserve-memory = <0x02000000>; // 32M
	};



/// ***************************************************************************************
///	-	DISP&MM-AVC Video Encoder
//$$ MODULE = "DISP&MM-AVC Video Encoder"
//$$ DEVICE="amvenc_avc"
//$$ L2 PROP_STR = "status"
//$$ L3 PROP_U32 2 ="reg"
    amvenc_avc{
		compatible = "amlogic,amvenc_avc";
		dev_name = "amvenc_avc.0";
		status = "okay";
		linux,contiguous-region = <&cma_0>;
		reserve-iomap = "true";
	};

/// ****************************************************************************
///	-	DISP&MM-VDIN
// MODULE = "DISP&MM-VDIN"
// DEVICE="vdin0"
// L2 PROP_STR = "status"
// L2 PROP_U32 2 = "reg"
// L2 PROP_U32 = "irq"
// L2 PROP_U32 = "vdin_id"
	vdin0{
		compatible = "amlogic,vdin";
		dev_name = "vdin0";
		status = "ok";
		reserve-memory = <0x01000000>;
		max_size = <1920 1080>;//1920x1080x2x4=17M
		irq = <115>;
		vdin_id = <0>;
	};

// DEVICE="vdin1"
// L2 PROP_STR = "status"
// L2 PROP_U32 2 = "reg"
// L2 PROP_U32 = "irq"
// L2 PROP_U32 = "vdin_id"
	vdin1 {
		compatible = "amlogic,vdin";
		dev_name = "vdin1";
		status = "ok";
		reserve-memory = <0x01000000>;
		miracast_size = <1920 1080>;//1920x1080x2x4=17M
		irq = <117>;
		vdin_id = <1>;
	};


	tvafe {
		compatible = "amlogic,tvafe";
		dev_name = "tvafe";
		status = "ok";
		reserve-memory = <0x500000>;
		reserve-iomap = "true";
		tvafe_id = <0>;
		pinctrl-names = "default";
		tvafe_pin_mux = < /*!!particular sequence, no more and no less!!!*/
			3	/*// TVAFE_CVBS_IN2,  //CVBS_IN0 = 0,*/
			1	/*// TVAFE_CVBS_IN0,    //CVBS_IN1,*/
			2	/*// TVAFE_CVBS_IN1,  //CVBS_IN2*/
			4	/*// TVAFE_CVBS_IN3,    //CVBS_IN3,*/
		>;
	};

/// ***************************************************************************************
///	-	DISP&MM-AMLVIDEO2
//$$ MODULE = "DISP&MM-AMLVIDEO2"
//$$ DEVICE="amlvideo2"
//$$ L2 PROP_STR = "status"
//$$ L3 PROP_U32 2 ="reg"
    amlvideo2{
		compatible = "amlogic,amlvideo2";
		dev_name = "amlvideo2.0";
		status = "okay";
		reserve-memory = <0x01800000>;
		reserve-iomap = "true";
	};


/// ****************************************************************************
///	-	ION
//$$ MODULE="ION"
//$$ DEVICE="ion_dev"
//$$ L2 PROP_STR = "status"
    ion_dev{
        compatible = "amlogic,ion_dev";
        dev_name = "ion_dev";
        status = "ok";
        share-memory-name = "ppmgr0";
        share-memory-offset = <0>;
        share-memory-size = <0x02000000>; //32M
    };

/// ****************************************************************************
///	-	DISP&MM-Vout
//$$ MODULE = "DISP&MM-Vout"
//$$ DEVICE = "mesonvout"
//$$ L2 PROP_STR = "status"
	mesonvout {
		compatible = "amlogic,mesonvout";
		dev_name = "mesonvout";
		status = "okay";
	};

///*****************************************************************************
///	-	AMLOGIC-PMU
	pmu {
		compatible = "amlogic, aml_pmu_prober"; /* fixed for pmu driver, don't change   */
		#address-cells = <1>;
		#size-cells = <0>;
		driver_version = "v0.60";

		//$$ DEVICE = "Pmu_aml1220"
		//$$ L2 PROP_STR = "sub_type"
		//$$ L2 PROP_STR = "i2c_bus"
		//$$ L2 PROP_U32 = "reg"
		//$$ L2 PROP_U32 = "soft_limit_to99"
		//$$ L2 PROP_U32 = "ddr_voltage"
		//$$ L2 PROP_U32 = "vddao_voltage"
		//$$ L2 PROP_CHOICE "battery_parameter_match" = "board_battery"
		//$$ L2 PROP_STR = "status"
		aml1220 {
			compatible = "amlogic,aml_pmu4"; /** compatible to amlogic PMU            */
			sub_type = "aml1220_pmu"; /** sub type of pmu family, must have */
			i2c_bus = "i2c_bus_b"; /** attached i2c bus, must have */
			reg = <0x35>; /** device i2c address, must have  */
			// soft_limit_to99 = <0>;  /** optional                             */
			// vbus_dcin_short_connect = <0>;
			status = "disable"; /** status of pmu, only one should be OK */
		};
	};


/// ***************************************************************************************
///	-	USB Controller
//$$ MODULE="USB Controller"
	usb_con {
		lm-compatible = "logicmodule-bus";

//$$ DEVICE="usb_b"
//$$ L2 PROP_U32 = "lm-periph-id"
//$$ L2 PROP_STR = "clock-src"
//$$ L2 PROP_U32 = "port-id"
//$$ L2 PROP_U32 = "port-type"
//$$ L2 PROP_U32 = "port-speed"
//$$ L2 PROP_U32 = "port-config"
//$$ L2 PROP_U32 = "port-dma"
//$$ L2 PROP_U32 = "port-id-mode"
//$$ L2 PROP_STR = "status"
		usb_b {
			lm-compatible = "amlogic,usb";
			lm-periph-id = <1>; /** lm name */
			clock-src = "usb1"; /** clock src */
			port-id = <1>;	 /** ref to mach/usb.h */
			port-type = <1>;	/** 0: otg, 1: host, 2: slave */
			port-speed = <0>; /** 0: default, 1: high, 2: full */
			port-config = <0>; /** 0: default */
			port-dma = <0>; /** 0: default, 1: single, 2: incr, 3: incr4, 4: incr8, 5: incr16, 6: disable*/
			port-id-mode = <1>; /** 0: hardware, 1: sw_host, 2: sw_slave*/
			status = "okay";
		};

//$$ DEVICE="usb_a"
//$$ L2 PROP_U32 = "lm-periph-id"
//$$ L2 PROP_STR = "clock-src"
//$$ L2 PROP_U32 = "port-id"
//$$ L2 PROP_U32 = "port-type"
//$$ L2 PROP_U32 = "port-speed"
//$$ L2 PROP_U32 = "port-config"
//$$ L2 PROP_U32 = "port-dma"
//$$ L2 PROP_U32 = "port-id-mode"
//$$ L2 PROP_STR = "gpio-vbus-power"
//$$ L2 PROP_U32 = "gpio-work-mask"
// L2 PROP_U32 = "charger_detect"
//$$ L2 PROP_STR = "status"
		usb_a {
			lm-compatible = "amlogic,usb";
			lm-periph-id = <0>; /** lm name */
			clock-src = "usb0"; /** clock src */
			port-id = <0>;	/** ref to mach/usb.h */
			port-type = <1>;	/** 0: otg, 1: host, 2: slave */
			port-speed = <0>; /** 0: default, high, 1: full */
			port-config = <0>; /** 0: default */
			port-dma = <0>; /** 0: default, 1: single, 2: incr, 3: incr4, 4: incr8, 5: incr16, 6: disable*/
			port-id-mode = <0>; /** 0: hardware, 1: sw_host, 2: sw_slave*/
			//gpio-vbus-power = "GPIOD_9";
			//gpio-work-mask = <1>; /**0: work on pulldown,1:work on pullup*/
			status = "okay";
		};

		usb_c {
			lm-compatible = "amlogic,usb";
			lm-periph-id = <2>; /** lm name */
			clock-src = "usb2"; /** clock src */
			port-id = <2>;	 /** ref to mach/usb.h */
			port-type = <1>;	/** 0: otg, 1: host, 2: slave */
			port-speed = <0>; /** 0: default, 1: high, 2: full */
			port-config = <0>; /** 0: default */
			port-dma = <0>; /** 0: default, 1: single, 2: incr, 3: incr4, 4: incr8, 5: incr16, 6: disable*/
			port-id-mode = <1>; /** 0: hardware, 1: sw_host, 2: sw_slave*/
			status = "okay";
			};
	};

/// ****************************************************************************
/// -   Audio
//$$ MODULE="Audio"
//$$ DEVICE="audio_i2s"
//$$ L2 PROP_STR = "status"
	audio_platform {
		compatible = "amlogic,aml-i2s";
		dev_name = "aml-i2s.0";
		status = "okay";
	};

	//$$ DEVICE="audio_i2s_dai"
	//$$ L2 PROP_STR = "status"
	audio_dai {
		compatible = "amlogic,aml-i2s-dai";
		dev_name = "aml-i2s-dai.0";
		status = "okay";
	};

	//$$ DEVICE="audio_spdif_dai"
	//$$ L2 PROP_STR = "status"
	audio_spdif_dai {
		compatible = "amlogic,aml-spdif-dai";
		dev_name = "aml-spdif-dai.0";
		status = "okay";
	};

	//$$ DEVICE="audio_spdif_codec"
	//$$ L2 PROP_STR = "status"
	audio_spdif_codec {
		compatible = "amlogic,aml-spdif-codec";
		dev_name = "spdif-dit.0";
		pinctrl-names = "aml_audio_spdif";
		//pinctrl-0 = <&audio_spdif_pins>;
		status = "okay";
	};

	//$$ DEVICE="audio_pcm2BT_codec"
	//$$ L2 PROP_STR = "status"
	audio_pcm2BT_codec {
		compatible = "amlogic,pcm2BT-codec";
		dev_name = "pcm2bt.0";
		status = "okay";
	};

	//$$ DEVICE="audio_pcm_dai"
	//$$ L2 PROP_STR = "status"
	audio_pcm_dai {
		compatible = "amlogic,aml-pcm-dai";
		dev_name = "aml-pcm-dai.0";
		status = "okay";
	};

	//$$ DEVICE="audio_pcm"
	//$$ L2 PROP_STR = "status"
	audio_pcm {
		compatible = "amlogic,aml-pcm";
		dev_name = "aml-pcm.0";
		status = "okay";
	};

	//$$ DEVICE="audio_pmu4_codec"
	//$$ L2 PROP_STR = "status"
	audio_pmu4_codec {
		compatible = "amlogic,aml_pmu4_codec";
		dev_name = "aml_pmu4_codec.0";
		status = "disable";
	};

	//$$ DEVICE="aml_audio_codec"
	//$$ L2 PROP_STR = "status"
	aml_audio_codec {
		compatible = "amlogic,audio_codec";

		pmu4:pmu4{
			codec_name = "amlpmu4";
			status = "disable";
		};

		dummy:dummy {
			codec_name = "dummy_codec";
			status = "okay";
		};
	};

	//$$ DEVICE="dummy_codec"
	//$$ L2 PROP_STR = "status"
	dummy_codec {
		compatible = "amlogic,aml_dummy_codec";
		dev_name = "dummy_codec.0";
		status = "okay";
	};

	//$$ DEVICE="aml_g9tv_sound_card"
	//$$ L2 PROP_STR = "aml,sound_card"
	//$$ L2 PROP_STR = "aml,codec_dai"
	//$$ L2 PROP_STR 6*2 = "aml,audio-routing"
	//$$ L2 PROP_STR = "mute_gpio"
	//$$ L2 PROP_STR = "pinctrl-names"
	//$$ L2 PROP_CHOICE "Audio_pin_0_match" = "pinctrl-0"
	//$$ L2 PROP_STR = "status"
	aml_g9tv_sound_card {
		compatible = "sound_card, aml_snd_g9tv";
		aml,sound_card = "AML-G9TVAUDIO";
		aml,codec_dai = "AML-G9TV","pmu4-audio-hifi","dummy_codec";

		aml,audio-routing-dummy=
			"LINEOUT","LOUTL",
			"LINEOUT","LOUTR";
		aml,audio-routing-amlpmu4 =
			"LINEOUT","Lineout left P",
			"LINEOUT","Lineout right P",
			"LINEIN","Linein left 1",
			"LINEIN","Linein right 1";
		mute_gpio = "CARD_8";
		mute_inv;
		pinctrl-names = "aml_snd_g9tv";
		pinctrl-0 = <&audio_pins>;
		status = "okay";
	};


// *****************************************************************************
// projector dtd
//$$ MODULE="projector"
//$$ DEVICE="projector"
	projector {
		compatible = "amlogic,projector";
		status = "okay";

		address = <0x1A>;
		i2c_bus = "i2c_bus_a";
		gpio_pwr = "GPIOAO_10";
	};
	lcd{
		compatible = "amlogic,lcd";
		dev_name = "lcd";
		status = "okay";
		pinctrl-names = "ttl_6bit_hvsync_de_on","ttl_6bit_hvsync_on","ttl_6bit_de_on","ttl_8bit_hvsync_de_on","ttl_8bit_hvsync_on","ttl_8bit_de_on",
						"ttl_6bit_hvsync_de_off","ttl_8bit_hvsync_de_off";
		pinctrl-0 = <&lcd_ttl_rgb_6bit_pins_on &lcd_ttl_clk_pins_on &lcd_ttl_hvsync_pins_on &lcd_ttl_de_pins_on>;
		pinctrl-1 = <&lcd_ttl_rgb_6bit_pins_on &lcd_ttl_clk_pins_on &lcd_ttl_hvsync_pins_on &lcd_ttl_de_pins_off>;
		pinctrl-2 = <&lcd_ttl_rgb_6bit_pins_on &lcd_ttl_clk_pins_on &lcd_ttl_hvsync_pins_off &lcd_ttl_de_pins_on>;
		pinctrl-3 = <&lcd_ttl_rgb_8bit_pins_on &lcd_ttl_clk_pins_on &lcd_ttl_hvsync_pins_on &lcd_ttl_de_pins_on>;
		pinctrl-4 = <&lcd_ttl_rgb_8bit_pins_on &lcd_ttl_clk_pins_on &lcd_ttl_hvsync_pins_on &lcd_ttl_de_pins_off>;
		pinctrl-5 = <&lcd_ttl_rgb_8bit_pins_on &lcd_ttl_clk_pins_on &lcd_ttl_hvsync_pins_off &lcd_ttl_de_pins_on>;
		pinctrl-6 = <&lcd_ttl_rgb_6bit_pins_off &lcd_ttl_clk_pins_off &lcd_ttl_hvsync_pins_off &lcd_ttl_de_pins_off>;
		pinctrl-7 = <&lcd_ttl_rgb_8bit_pins_off &lcd_ttl_clk_pins_off &lcd_ttl_hvsync_pins_off &lcd_ttl_de_pins_off>;

 		lcd_model_name ="lcd_OPD30";
 		lcd_bits_user=<6>;	/** user defined lcd bits(6 or 8, decided by hardware design; only valid when lcd_bits_option=1) */

		/* below configs are decided by hardware design, you can modify them if needed. */
		ttl_rb_bit_swap=<0 0>;	/** ttl rb_swap, bit_swap : (0=normal, 1=swap) */
		lvds_channel_pn_swap=<0>;	/** lvds channel pn swap: (0=normal, 1=swap) */

		/* recommend settings, you can modify them if needed. */
		valid_hvsync_de=<1 1>;	/** hvsync_signal_valid, DE_signal_valid : (0=disable signal, 1=enable signal) */
		hsign_hoffset_vsign_voffset=<0 0 0 0>;	/** hsign, hoffset, vsign, voffset :("sign-offset" is a pair. sign: 0=positive, 1=negative) */

		dither_user_ctrl=<0 0x000>;	/**  dither_user(0=auto setting, 1=user define), dither_ctrl(user defined dither control, only valid when user_define=1) */
		gamma_en_reverse=<1 0>;	/** gamma_en(0=disable gamma table, 1=enable gamma table), gamma_table_revert(0=normal, 1=reverse) */
		gamma_multi_rgb_coeff=<0 100 100 100>;	/** gamma_multi(0=single gamma, RGB are same, 1=multi gamma, RGB are different), gamma_r_coeff(%), gamma_g_coeff(%), gamma_b_coeff(%) */
		/** if gamma_multi=1, there must be 3 gamma tables, named as gamma_table_r, gamma_table_g, gamma_table_b */
		gamma_table=<0 1 2 3 4 5 6 7 8 8 9 10 11 12 13 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 
					32 33 34 35 36 37 37 38 39 40 41 42 43 44 45 46 47 48 49 50 50 51 52 53 54 55 56 57 57 58 59 60 
					61 62 63 64 65 65 67 67 68 69 70 71 72 73 74 75 76 76 77 78 79 80 81 82 82 83 84 85 86 87 88 88 
					89 90 91 92 93 94 95 96 97 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 
					120 121 122 123 124 125 126 127 128 129 130 131 131 132 133 135 136 136 138 139 140 141 142 143 144 145 146 147 148 149 151 152 
					153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 176 177 178 179 180 181 182 183 184 185 
					186 188 189 190 191 192 193 195 196 197 198 199 200 202 203 204 205 206 208 209 210 211 212 213 214 216 217 218 219 220 221 222 
					223 224 225 226 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255>;

		/* default settings, don't modify them unless there is display problem */
		clock_spread_spectrum=<0>;	/** ss_level(0=disable, 1=0.5%, 2=1%, 3=1.5%, 4=2%) */
		clock_auto_generation=<1>;	/** clk_auto_generation(0=use customer clock parameters, as clk_pll_div_clk_ctrl defined, 1=auto generate clock parameters by lcd_clock) */
		clk_pll_div_clk_ctrl=<0x100042b 0x18833 0x03a82102>;	/** pll_ctrl, div_ctrl, clk_ctrl : (only valid when clk_auto_generation=0) */
		lvds_vswing=<1>;	/** lvds_vswing_level(default level=1, support level 0,1,2,3,4) */
		lvds_user_repack=<0 0>;	/** lvds_repack_user(0=auto setting, 1=user define), lvds_repack(0=JEIDA mode data mapping, 1=VESA mode data mapping. only valid when lvds_repack_user=1) */
		edp_user_link_rate_lane_count=<1 1 4>;	/** edp_user(0=auto setting, 1=user define), link_rate(0=1.62G, 1=2.7G, only valid when edp_user=1), lane_count(support 1,2,4, only valid when edp_user=1) */
		edp_link_adaptive_vswing=<0 0>;	/** adaptive(0=fixed user defined vswing, 1=auto setting vswing by training), vswing(support level 0,1,2,3, user defined vswing, only valid when adaptive=0) */
		edp_sync_clock_mode=<1>; /** clocking mode for the user data: (0=asyncronous clock, 1=synchronous clock. default 1) */
		rgb_base_coeff=<0xf0 0x74a>;	/** rgb_base, rgb_coeff */

		//lcd power ctrl	//support up to 15 steps for each sequence
		power_on_uboot="n","n","n";	/** only for uboot, ahead of lcd_power_on, no need config delay */
		power_on_step_1="signal";	/** gpio_type(cpu, pmu, signal), gpio_name(valid when gpio_type is cpu or pmu), gpio_value(valid when gpio_type is cpu or pmu) */
 		power_on_delay=<20>;	/** power on delay after each step */
		power_off_step_1="signal";	/** gpio_type(cpu, pmu, signal), gpio_name(valid when gpio_type is cpu or pmu), gpio_value(valid when gpio_type is cpu or pmu) */
		power_off_delay=<100>;	/** power off delay after each step */
		power_off_uboot="n","n","n";	/** only for uboot, at the end of lcd_power_off, no need config delay */
	};
	
	lcd_OPD30:lcd_OPD30{
		model_name="OPD30";	/** lcd model name */
		interface="ttl";			/** lcd_interface(mipi, lvds, edp, ttl) */
		active_area=<154 86>;		/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
		lcd_bits_option=<8 1>;		/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */

		resolution=<1280 800>;	/** horizontal resolution, vertical resolution */
		period=<1680 831>;		/** horizontal period(htotal), vertical period(vtotal) */

		clock_hz_pol=<83500000 1>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
		hsync_width_backporch=<128 200>;	/** hsync_width, hsync_backporch(without hsync_width) */
		vsync_width_backporch=<6 22>;	/** vsync_width, vsync_backporch(without vsync_width) */
		pol_hsync_vsync=<0 1>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
	};


/// ****************************************************************************
/// -   GPIO
//$$ MODULE="GPIO"
//$$ DEVICE="g9tv-gpio"
	gpio:gpio{
		compatible = "amlogic,g9bb-gpio";
		dev_name = "gpio";
		#gpio-cells=<2>;
	};





/// ****************************************************************************
/// -   Pinmux
//$$ MODULE="Pinmux"
//$$ DEVICE="pinmux-m8"
	pinmux {
		compatible = "amlogic,pinmux-g9bb";
		dev_name = "pinmux";
		#pinmux-cells=<2>;

		//$$ MATCH "meson_vcck_dvfs_pin_0_match" = "&aml_pwm_pins"
		//$$ L2 PROP_U32 2 = "amlogic,setmask"
		//$$ L2 PROP_U32 2 = "amlogic,clrmask"
		//$$ L2 PROP_STR = "amlogic,pins"
		aml_pwm_pins:aml_pwm_pins {
			amlogic,setmask = <9 0x1000000>;
			amlogic,clrmask = <3 0x10
					   5 0x2000000
					   9 0x1
					   10 0x100000>;
			amlogic,pins = "GPIOY_8";
		};

		//$$ MATCH "uart_ao_pin_match" = "&ao_uart_pins"
		//$$ L2 PROP_U32 2 = "amlogic,setmask"
		//$$ L2 PROP_STR 2 = "amlogic,pins"
		ao_uart_pins:ao_uart {
			amlogic,setmask = <13 0x1800>;
			amlogic,pins = "GPIOAO_0", "GPIOAO_1";
		};

		//$$ MATCH "uart_0_pin_match" = "&a_uart_pins"
		//$$ L2 PROP_U32 2 = "amlogic,setmask"
		//$$ L2 PROP_STR 4 = "amlogic,pins"
		a_uart_pins:a_uart {
			amlogic,setmask=<4 0x3c00>;
			amlogic,pins="GPIOX_12", "GPIOX_13", "GPIOX_14", "GPIOX_15";
		};

		//$$ MATCH "uart_1_pin_match" = "&b_uart_pins"
		//$$ L2 PROP_U32 2 = "amlogic,setmask"
		//$$ L2 PROP_STR 4 = "amlogic,pins"
		b_uart_pins:b_uart {
			amlogic,setmask = <4 0x03c0>;
			amlogic,clrmask = <3 0x04000000
					   4 0x0000000c
					   1 0x048c0000
					   7 0x30080000>;
			amlogic,pins = "GPIOH_1", "GPIOH_2","GPIOH_5", "GPIOH_6";
		};

		//$$ MATCH "Card_pin_0_match" = "&sdhc_b_pins"
		//$$ L2 PROP_U32 2 = "amlogic,setmask"
		//$$ L2 PROP_U32 4 = "amlogic,clrmask"
		//$$ L2 PROP_STR 6 = "amlogic,pins"
		sdhc_b_pins:sdhc_b_pin {
			amlogic,setmask=<2 0xfc00>;
			amlogic,clrmask=<2 0xf0 8 0x600>;
			amlogic,pins="CARD_0","CARD_1","CARD_2","CARD_3","CARD_4","CARD_5";
		};

		//$$ MATCH "Card_pin_1_match" = "&sdhc_c_pins"
		//$$ L2 PROP_U32 2 = "amlogic,setmask"
		//$$ L2 PROP_U32 4 = "amlogic,clrmask"
		//$$ L2 PROP_STR 6 = "amlogic,pins"
		sdhc_c_pins:sdhc_c_pin {
			amlogic,setmask=<6 0x3f000000>;
			amlogic,clrmask=<4 0x7c000000 2 0x4c00000>;
			amlogic,pins="BOOT_0","BOOT_1","BOOT_2","BOOT_3","BOOT_16","BOOT_17";
		};

		//$$ MATCH "Card_pin_2_match" = "&sdhc_a_pins"
		//$$ L2 PROP_U32 2 = "amlogic,setmask"
		//$$ L2 PROP_U32 2 = "amlogic,clrmask"
		//$$ L2 PROP_STR 6 = "amlogic,pins"
//		sdhc_a_pins:sdhc_a_pin {
//			amlogic,setmask=<8 0x3f>;
//			amlogic,clrmask=<5 0x6c00 >;
//			amlogic,pins="GPIOX_0","GPIOX_1","GPIOX_2","GPIOX_3","GPIOX_8","GPIOX_9";
//		};

		//$$ MATCH "sdio_pin_5_match" = "&sdio_all_pins"
		//$$ L2 PROP_U32 2 = "amlogic,setmask"
		//$$ L2 PROP_U32 3*2 = "amlogic,clrmask"
		//$$ L2 PROP_STR 6 = "amlogic,pins"
		//$$ L2 PROP_U32 = "amlogic,enable-output"
		//$$ L2 PROP_U32 = "amlogic,pullup"
		//$$ L2 PROP_U32 = "amlogic,pullupen"
//		sdio_all_pins:sdio_all_pins {
//			amlogic,setmask = <8 0x0000003f>;	/*sdio a*/
//			amlogic,clrmask = <6 0x3f000000		/*sdio c*/
//					   2 0x0000fc00		/*sdio b*/
//					   5 0x00007c00>;	/*sdhc a*/
//			amlogic,pins = "GPIOX_0","GPIOX_1","GPIOX_2","GPIOX_3","GPIOX_8","GPIOX_9";
//			amlogic,enable-output=<1>; /** 0:output, 1:input */
//			amlogic,pullup=<1>;
//			amlogic,pullupen=<1>;
//		};

		//$$ MATCH "sdio_pin_4_match" = "&sdio_clk_cmd_pins"
		//$$ L2 PROP_U32 2 = "amlogic,setmask"
		//$$ L2 PROP_U32 3*2 = "amlogic,clrmask"
		//$$ L2 PROP_STR 2 = "amlogic,pins"
		//$$ L2 PROP_U32 = "amlogic,enable-output"
		//$$ L2 PROP_U32 = "amlogic,pullup"
		//$$ L2 PROP_U32 = "amlogic,pullupen"
//		sdio_clk_cmd_pins:sdio_clk_cmd_pins {
//			amlogic,setmask = <8 0x00000003>;	/*sdio a*/
//			amlogic,clrmask = <6 0x3f000000		/*sdio c*/
//					   2 0x0000fc00		/*sdio b*/
//					   5 0x00007c00>;	/*sdhc a*/
//			amlogic,pins = "GPIOX_8","GPIOX_9"; /** GPIOX_8:CLK, GPIOX_9:CMD */
//			amlogic,enable-output=<1>; /** 0:output, 1:input */
//			amlogic,pullup = <1>;
//			amlogic,pullupen = <1>;
//		};

		//$$ MATCH "sdio_pin_1_match" = "&sd_all_pins"
		//$$ L2 PROP_U32 2 = "amlogic,setmask"
		//$$ L2 PROP_U32 3*2 = "amlogic,clrmask"
		//$$ L2 PROP_STR 6 = "amlogic,pins"
		//$$ L2 PROP_U32 = "amlogic,enable-output"
		//$$ L2 PROP_U32 = "amlogic,pullup"
		//$$ L2 PROP_U32 = "amlogic,pullupen"
		sd_all_pins:sd_all_pins {
			amlogic,setmask = <2 0x0000fc00>;	/*sdio b*/
			amlogic,clrmask = <6 0x3f000000		/*sdio c*/
					   8 0x0000063f		/*sdio a, UART*/
					   2 0x000000f0>;	/*sdhc b*/
			amlogic,pins = "CARD_0","CARD_1","CARD_2","CARD_3","CARD_4","CARD_5";
			amlogic,enable-output=<1>; /* 0:output, 1:input */
			amlogic,pullup=<1>;
			amlogic,pullupen=<1>;
		};

		//$$ MATCH "sdio_pin_6_match" = "&sd_1bit_pins"
		//$$ L2 PROP_U32 2 = "amlogic,setmask"
		//$$ L2 PROP_U32 3*2 = "amlogic,clrmask"
		//$$ L2 PROP_STR 6 = "amlogic,pins"
		//$$ L2 PROP_U32 = "amlogic,enable-output"
		//$$ L2 PROP_U32 = "amlogic,pullup"
		//$$ L2 PROP_U32 = "amlogic,pullupen"
		sd_1bit_pins:sd_1bit_pins {
			amlogic,setmask = <2 0x00008c00>;	/*sdio b*/
			amlogic,clrmask = <6 0x3f000000		/*sdio c*/
					   8 0x0000003f		/*sdio a*/
					   2 0x000000f0>;	/*sdhc b*/
			amlogic,pins = "CARD_0","CARD_1","CARD_2","CARD_3","CARD_4","CARD_5";
			amlogic,enable-output=<1>; /* 0:output, 1:input */
			amlogic,pullup = <1>;
			amlogic,pullupen = <1>;
		};

		//$$ MATCH "sdio_pin_0_match" = "&sd_clk_cmd_pins"
		//$$ L2 PROP_U32 2 = "amlogic,setmask"
		//$$ L2 PROP_U32 3*2 = "amlogic,clrmask"
		//$$ L2 PROP_STR 2 = "amlogic,pins"
		//$$ L2 PROP_U32 = "amlogic,enable-output"
		//$$ L2 PROP_U32 = "amlogic,pullup"
		//$$ L2 PROP_U32 = "amlogic,pullupen"
		sd_clk_cmd_pins:sd_clk_cmd_pins {
			amlogic,setmask=<2 0x00000c00>;         /*sdio b*/
			amlogic,clrmask=<6 0x3f000000           /*sdio c*/
					8 0x0000003f        /*sdio a*/
					2 0x000000f0>;      /*sdhc b*/
			amlogic,pins = "CARD_2","CARD_3"; /** CARD_2:CLK, CARD_3:CMD */
			amlogic,enable-output=<1>; /** 0:output, 1:input */
			amlogic,pullup=<1>;
			amlogic,pullupen=<1>;
		};

		//$$ MATCH "sdio_pin_3_match" = "&emmc_all_pins"
		//$$ L2 PROP_U32 2 = "amlogic,setmask"
		//$$ L2 PROP_U32 3*2 = "amlogic,clrmask"
		//$$ L2 PROP_STR 6 = "amlogic,pins"
		//$$ L2 PROP_U32 = "amlogic,enable-output"
		//$$ L2 PROP_U32 = "amlogic,pullup"
		//$$ L2 PROP_U32 = "amlogic,pullupen"
		emmc_all_pins:emmc_all_pins {
			amlogic,setmask=<6 0x3f000000>;         /*sdio c*/
			amlogic,clrmask=<2 0x0000fc00           /*sdio b & nand*/
					8 0x0000003f        /*sdio a*/
					4 0x7c000000>;        /*sdhc c*/
			amlogic,pins = "BOOT_0","BOOT_1","BOOT_2","BOOT_3","BOOT_16","BOOT_17";
			amlogic,enable-output=<1>; /** 0:output, 1:input */
			amlogic,pullup=<1>;
			amlogic,pullupen=<1>;
		};

		//$$ MATCH "sdio_pin_2_match" = "&emmc_clk_cmd_pins"
		//$$ L2 PROP_U32 2 = "amlogic,setmask"
		//$$ L2 PROP_U32 3*2 = "amlogic,clrmask"
		//$$ L2 PROP_STR 2 = "amlogic,pins"
		//$$ L2 PROP_U32 = "amlogic,enable-output"
		//$$ L2 PROP_U32 = "amlogic,pullup"
		//$$ L2 PROP_U32 = "amlogic,pullupen"
		emmc_clk_cmd_pins:emmc_clk_cmd_pins {
			amlogic,setmask=<6 0x03000000>;         /*bit[24-25] */
			amlogic,clrmask=<2 0x0000fc00           /*sdio b & nand*/
					8 0x0000003f        /*sdio a*/
					4 0x7c000000>;        /*sdhc c*/
			amlogic,pins = "BOOT_16","BOOT_17"; /** BOOT_16:CMD, BOOT_17:CLK */
			amlogic,enable-output=<1>; /** 0:output, 1:input */
			amlogic,pullup=<1>;
			amlogic,pullupen=<1>;
		};

		sdhc_sd_clk_cmd_pins:sdhc_sd_clk_cmd_pins {
			amlogic,setmask = <2 0x00000030>;	/*sdhc b*/
			amlogic,clrmask = <5 0x00007c00		/*sdhc a*/
					   4 0x7c000000		/*sdhc c*/
					   2 0x0000fc00		/*sdio b*/
					   8 0x00000600>;	/*UART*/
			amlogic,pins = "CARD_2","CARD_3"; /* CARD_2:CLK, CARD_3:CMD */
			amlogic,enable-output=<1>; /* 0:output, 1:input */
			amlogic,pullup = <1>;
			amlogic,pullupen = <1>;
		};

		sdhc_sd_all_pins:sdhc_sd_all_pins {
			amlogic,setmask = <2 0x000000f0>;	/*sdhc b*/
			amlogic,clrmask = <5 0x00007c00		/*sdhc a*/
					   4 0x7c000000		/*sdhc c*/
					   2 0x0000fc00		/*sdio b*/
					   8 0x00000600>;	/*UART*/
			amlogic,pins="CARD_0","CARD_1","CARD_2","CARD_3","CARD_4","CARD_5";
			amlogic,enable-output = <1>; /* 0:output, 1:input */
			amlogic,pullup = <1>;
			amlogic,pullupen = <1>;
		};

		sdhc_emmc_clk_cmd_pins:sdhc_emmc_clk_cmd_pins {
			amlogic,setmask = <4 0x0c000000>;	/*bit[26-27] */
			amlogic,clrmask = <2 0x000000f0		/*sdhc b & nand*/
					   5 0x00007c00		/*sdhc a*/
					   6 0x3f000000>;	/*sdio c*/
			amlogic,pins = "BOOT_16","BOOT_17"; /** BOOT_16:CMD, BOOT_17:CLK */
			amlogic,enable-output = <1>; /** 0:output, 1:input */
			amlogic,pullup = <1>;
			amlogic,pullupen = <1>;
		};

		sdhc_emmc_all_pins:sdhc_emmc_all_pins {
			amlogic,setmask = <4 0x7c000000>;	/*sdhc c*/
			amlogic,clrmask = <2 0x000000f0		/*sdhc b & nand*/
					   5 0x00007c00		/*sdhc a*/
					   6 0x3f000000>;	/*sdio c*/
			amlogic,pins = "BOOT_0","BOOT_1","BOOT_2","BOOT_3","BOOT_4","BOOT_5","BOOT_6","BOOT_7","BOOT_16","BOOT_17";
			amlogic,enable-output=<1>; /** 0:output, 1:input */
			amlogic,pullup=<1>;
			amlogic,pullupen=<1>;
		};

//		sdhc_sdio_clk_cmd_pins:sdhc_sdio_clk_cmd_pins {
//			amlogic,setmask = <5 0x00000c00>;	/*sdhc a bit[10-11] */
//			amlogic,clrmask = <2 0x000000f0		/*sdhc b*/
//					   4 0x7c000000		/*sdhc c */
//					   8 0x0000003f>;	/*sdio a*/
//			amlogic,pins = "GPIOX_8","GPIOX_9"; /** BOOT_16:CMD, BOOT_17:CLK */
//			amlogic,enable-output = <1>; /** 0:output, 1:input */
//			amlogic,pullup = <1>;
//			amlogic,pullupen = <1>;
//		};
//		sdhc_sdio_all_pins:sdhc_sdio_all_pins {
//			amlogic,setmask = <5 0x00006c00>;	/*sdhc a*/
//			amlogic,clrmask = <2 0x058000f0		/*sdhc b*/
//					   4 0x7c000000		/*sdhc c */
//					   8 0x0000003f>;	/*sdio a*/
//			amlogic,pins = "GPIOX_0","GPIOX_1","GPIOX_2","GPIOX_3","GPIOX_8","GPIOX_9";
//			amlogic,enable-output = <1>; /** 0:output, 1:input */
//			amlogic,pullup = <1>;
//			amlogic,pullupen = <1>;
//		};

		//$$ MATCH "I2C_A_pin_match" = "&a_i2c_master"
		//$$ L2 PROP_U32 2 = "amlogic,setmask"
		//$$ L2 PROP_STR 2 = "amlogic,pins"
		a_i2c_master:a_i2c {
			amlogic,setmask = <6 0xc0000000>;
			amlogic,clrmask = <7 0x06000000>;
			amlogic,pins = "GPIOW_0","GPIOW_1";
		};


		//$$ MATCH "I2C_B_pin_match" = "&b_i2c_master"
		//$$ L2 PROP_U32 2 = "amlogic,setmask"
		//$$ L2 PROP_STR 2 = "amlogic,pins"
		b_i2c_master:b_i2c {
			amlogic,setmask = <10 0xc000>;
			amlogic,clrmask = <9  0xf00000c0>;
			amlogic,pins = "GPIOY_12","GPIOY_13";

		};

		//$$ MATCH "remote_pin_0_match" = "&remote_pins"
		//$$ L2 PROP_U32 2 = "amlogic,setmask"
		//$$ L2 PROP_STR = "amlogic,pins"
		remote_pins:remote_pin {
			amlogic,setmask = <13 0x1>;
			amlogic,pins = "GPIOAO_7";
		};

		//$$ MATCH "audio_pins_match" = "&audio_pins"
		//$$ L2 PROP_U32 4 = "amlogic,setmask"
		//$$ L2 PROP_U32 10 = "amlogic,clrmask"
		//$$ L2 PROP_STR 6 = "amlogic,pins"
		audio_pins:audio_pins {
			amlogic,setmask = <2 0x6B0000>; /* I2S */
			amlogic,clrmask = <2 0x140000
			                   3 0x80000>;
			amlogic,pins = "GPIOZ_1", "GPIOZ_2", "GPIOZ_3", "GPIOZ_4", "GPIOZ_5";
		};

		//$$ MATCH "dvb_p_ts0_pins_match" = "&dvb_p_ts0_pins"
		//$$ L2 PROP_U32 2 = "amlogic,setmask"
		//$$ L2 PROP_U32 8 = "amlogic,clrmask"
		//$$ L2 PROP_STR 12 = "amlogic,pins"
		/*dvb_p_ts0_pins:dvb_p_ts0_pins {
			amlogic,setmask = <3 0x3F>;
			amlogic,clrmask = <1 0xCCC41
					   4 0x2000000
					   7 0x20000000
					   9 0x431F>;
			amlogic,pins = "GPIOY_9","GPIOY_10","GPIOY_11","GPIOY_12","GPIOY_13","GPIOY_14","GPIOY_15","GPIOY_16","GPIOY_0","GPIOY_1","GPIOY_4","GPIOY_8";
		};
		*/

		//$$ MATCH "dvb_s_ts0_pins_match" = "&dvb_s_ts0_pins"
		//$$ L2 PROP_U32 2 = "amlogic,setmask"
		//$$ L2 PROP_U32 8 = "amlogic,clrmask"
		//$$ L2 PROP_STR 12 = "amlogic,pins"
		/*dvb_s_ts0_pins:dvb_s_ts0_pins {
			amlogic,setmask = <3 0x2F>;
			amlogic,clrmask = <1 0xCCC41
					   4 0x2000000
					   7 0x20000000
					   9 0x4310>;
			amlogic,pins = "GPIOY_9","GPIOY_10","GPIOY_11","GPIOY_12","GPIOY_13","GPIOY_14","GPIOY_15","GPIOY_16","GPIOY_0","GPIOY_1","GPIOY_4","GPIOY_8";
		};
		*/

		//$$ MATCH "dvb_fe_pins_match" = "&dvb_fe_pins"
		//$$ L2 PROP_U32 8 = "amlogic,clrmask"
		//$$ L2 PROP_STR 1 = "amlogic,pins"
		dvb_fe_pins: dvb_fe_pin {
			amlogic,clrmask = <7 0x2000000
					   6 0x40000000>;
			amlogic,pins = "GPIOW_1";
		};


		/*
		smc_pins:smc_pins {
			amlogic,setmask = <5 0x000000c0>;
			amlogic,clrmask = <3 0x00000020
					   9 0xc>;
			amlogic,pins = "GPIOY_13","GPIOY_14";
		};*/

		lcd_backlight_pins:lcd_backlight{
			amlogic,setmask=<3 0x1000000>;
			amlogic,clrmask=<0 0x48 7 0x10000200>;
			amlogic,pins = "GPIOX_0";
		};

		lcd_ttl_hvsync_pins_on:lcd_ttl_hvsync_on{
			amlogic,setmask=<8 0x1800000>;
			amlogic,clrmask=<0 0xc0300 1 0x3a0 4 0x300000>;
			amlogic,pins = "GPIOX_24","GPIOX_25";
		};

		lcd_ttl_hvsync_pins_off:lcd_ttl_hvsync_off{
			amlogic,clrmask=<0 0xc0300 1 0x3a0 4 0x300000 8 0x1800000>;
			amlogic,pins = "GPIOX_24","GPIOX_25";
			amlogic,enable-output=<1>;
		};

		lcd_ttl_de_pins_on:lcd_ttl_de_on{
			amlogic,setmask=<8 0x10000000>;
			amlogic,clrmask=<0 0x400 4 0x40000 8 0x80000>;
			amlogic,pins = "GPIOX_27";
		};

		lcd_ttl_de_pins_off:lcd_ttl_de_off{
			amlogic,clrmask=<0 0x400 4 0x40000 8 0x10080000>;
			amlogic,pins = "GPIOX_27";
			amlogic,enable-output=<1>;
		};

		lcd_ttl_clk_pins_on:lcd_ttl_clk_on{
			amlogic,setmask=<8 0x400000>;
			amlogic,clrmask=<0 0x80 3 0x2000000 4 0x80000 7 0x40000000>;
			amlogic,pins = "GPIOX_26";
		};

		lcd_ttl_clk_pins_off:lcd_ttl_clk_off{
			amlogic,clrmask=<0 0x80 3 0x2000000 4 0x80000 7 0x40000000 8 0x400000>;
			amlogic,pins = "GPIOX_26";
			amlogic,enable-output=<1>;
		};

		lcd_ttl_rgb_8bit_pins_on:lcd_ttl_rgb_8bit_on{
			amlogic,setmask=<0 0x3f>;
			amlogic,clrmask=<0 0x40 1 0x3005f 2 0x8 3 0x7847ffc0 4 0x3fc00 5 0x7c00 6 0x30000 7 0x8003ffff 8 0xe00003f 9 0x1e4000>;
			amlogic,pins = "GPIOX_0","GPIOX_1","GPIOX_2","GPIOX_3","GPIOX_4","GPIOX_5","GPIOX_6","GPIOX_7",		//R0~R7
					"GPIOX_8","GPIOX_9","GPIOX_10","GPIOX_11","GPIOX_12","GPIOX_13","GPIOX_14","GPIOX_15",	//G0~G7
					"GPIOX_16","GPIOX_17","GPIOX_18","GPIOX_19","GPIOX_20","GPIOX_21","GPIOX_22","GPIOX_23";//B0~B7
		};

		lcd_ttl_rgb_8bit_pins_off:lcd_ttl_rgb_8bit_off{
			amlogic,clrmask=<0 0x7f 1 0x3005f 2 0x8 3 0x7847ffc0 4 0x3fc00 5 0x7c00 6 0x30000 7 0x8003ffff 8 0xe00003f 9 0x1e4000>;
			amlogic,pins = "GPIOX_0","GPIOX_1","GPIOX_2","GPIOX_3","GPIOX_4","GPIOX_5","GPIOX_6","GPIOX_7",		//R0~R7
					"GPIOX_8","GPIOX_9","GPIOX_10","GPIOX_11","GPIOX_12","GPIOX_13","GPIOX_14","GPIOX_15",	//G0~G7
					"GPIOX_16","GPIOX_17","GPIOX_18","GPIOX_19","GPIOX_20","GPIOX_21","GPIOX_22","GPIOX_23";//B0~B7
			amlogic,enable-output=<1>;
		};

		lcd_ttl_rgb_6bit_pins_on:lcd_ttl_rgb_6bit_on{
			amlogic,setmask=<0 0x15>;
			amlogic,clrmask=<0 0x40 1 0x3005f 2 0x8 3 0x7844ffc0 4 0x3fc00 5 0x3000 7 0x8000fcfc 8 0xc 9 0x180000>;
			amlogic,pins = "GPIOX_2","GPIOX_3","GPIOX_4","GPIOX_5","GPIOX_6","GPIOX_7",		//R2~R7
					"GPIOX_10","GPIOX_11","GPIOX_12","GPIOX_13","GPIOX_14","GPIOX_15",	//G2~G7
					"GPIOX_18","GPIOX_19","GPIOX_20","GPIOX_21","GPIOX_22","GPIOX_23";	//B2~B7
		};

		lcd_ttl_rgb_6bit_pins_off:lcd_ttl_rgb_6bit_off{
			amlogic,clrmask=<0 0x55 1 0x3005f 2 0x8 3 0x7844ffc0 4 0x3fc00 5 0x3000 7 0x8000fcfc 8 0xc 9 0x180000>;
			amlogic,pins = "GPIOX_2","GPIOX_3","GPIOX_4","GPIOX_5","GPIOX_6","GPIOX_7",		//R2~R7
					"GPIOX_10","GPIOX_11","GPIOX_12","GPIOX_13","GPIOX_14","GPIOX_15",	//G2~G7
					"GPIOX_18","GPIOX_19","GPIOX_20","GPIOX_21","GPIOX_22","GPIOX_23";	//B2~B7
			amlogic,enable-output=<1>;
		};

	}; /* end of pinmux */



/// ****************************************************************************
///	-	DVB
//$$ MODULE="DVB"

//$$ DEVICE="dvb"
//$$ L2 PROP_STR = "ts0"
//$$ L2 PROP_U32 = "ts0_invert"
//$$ L2 PROP_U32 = "ts0_control"
//$$ L2 PROP_STR 6 = "pinctrl-names"
//$$ L2 PROP_CHOICE "dvb_p_ts0_pins_match" = "pinctrl-0"
//$$ L2 PROP_CHOICE "dvb_s_ts0_pins_match" = "pinctrl-1"
	dvb {
		compatible = "amlogic,dvb";
		/*"parallel","serial","disable"*/
		ts2 = "parallel";
		ts2_control = <0>;
		ts2_invert = <0>;
		//pinctrl-names = "p_ts0", "s_ts0";
		//pinctrl-0 = <&dvb_p_ts0_pins>;
		//pinctrl-1 = <&dvb_s_ts0_pins>;
	};

//$$ DEVICE="dvbfe"
//$$ L2 PROP_STR = "dtv_demod0"
//$$ L2 PROP_U32 = "dtv_demod0_i2c_adap_id"
//$$ L2 PROP_U32 = "dtv_demod0_i2c_addr"
//$$ L2 PROP_U32 = "dtv_demod0_reset_value"
//$$ L2 PROP_STR = "dtv_demod0_reset_gpio"
//$$ L2 PROP_U32 = "fe0_dtv_demod"
//$$ L2 PROP_U32 = "fe0_ts"
//$$ L2 PROP_U32 = "fe0_dev"
//$$ L2 PROP_STR 6 = "pinctrl-names"
//$$ L2 PROP_CHOICE "dvb_fe_pins_match" = "pinctrl-0"
	dvbfe {
		compatible = "amlogic,dvbfe";
		dtv_demod0 = "AMLDEMOD";
		//dtv_demod0_i2c_adap_id = <2>;
		//dtv_demod0_i2c_addr = <0xC0>;
		//dtv_demod0_reset_value = <0>;
		//dtv_demod0_reset_gpio = "GPIOY_5";
		fe0_dtv_demod = <0>;
		fe0_ts = <2>;
		fe0_dev = <0>;
		dtv_demod0_mem = <1>;
		reserve-memory = <0x1400000>;
		reserve-iomap = "true";
		//pinctrl-names = "default";
		//pinctrl-0 = <&dvb_fe_pins>;
	//	fe0_mem = <0>;
	//	reserve-memory = <0x2000000>;  //32m
		tuner0 = "si2151_tuner";
		tuner0_i2c_adap_id = <2>;
		tuner0_i2c_addr = <0x60>;
		tuner0_reset_value = <0>;
		tuner0_reset_gpio =  "GPIOW_1" ;  /*GPIOX_8   76*/
		fe0_tuner = <0>;
		//atv_demod0 = "si2177_atv_demod";
		atv_demod0 = "aml_atv_demod";
		fe0_atv_demod = <0>;
		pinctrl-names = "default";
		pinctrl-0 = <&dvb_fe_pins>;
	};

	/*smartcard {
		compatible = "amlogic,smartcard";
		smc0_irq = <69>;
		smc0_enable_pin = "GPIOY_12";
		smc0_enable_level = <1>;
		smc0_reset_pin = "GPIOY_6";
		smc0_reset_level = <0>;
		smc0_clk_pinmux_reg = <0x2031>;
		smc0_clk_pinmux_bit = <0x80>;
		smc0_clk_oen_reg = <0x200f>;
		smc0_clk_out_reg = <0x2010>;
		smc0_clk_bit = <0x2000>;
		smc0_det_pin = "GPIOY_7";
		pinctrl-names = "default";
		pinctrl-0 = <&smc_pins>;
	};*/

/// ***************************************************************************************
///	-	Efuse
//$$ MODULE="Efuse"
//$$ DEVICE="efuse"
//$$ L2 PROP_STR = "status"
//$$ L2 PROP_U32 2 = "plat-pos"
//$$ L2 PROP_U32 = "plat-count"
//$$ L2 PROP_U32 = "usid-min"
//$$ L2 PROP_U32 = "usid-max"
    efuse{
		compatible = "amlogic,efuse";
		dev_name = "efuse";
		status = "okay";
		plat-pos = <0 454>;
		plat-count = <58>;
		usid-min = <8>; /*reserved*/
		usid-max = <31>; /*reserved*/
	};

///	-	Thermal
//$$ MODULE="Thermal"
//$$ DEVICE="thermal"
//$$ L2 PROP_U32 3*3 = "trip_point"
//$$ L2 PROP_U32 = "#thermal-cells"
//$$ L2 PROP_U32 = "cpu_cali_a"
//$$ L2 PROP_U32 = "idle_interval"
	thermal{
		compatible = "amlogic-thermal";
		#thermal-cells=<7>;
		dev_name = "aml_thermal";
		trip_point=<70 1608001 1608001 511 511 3 5
                    80 1200001 1200001 435 435 2 4
                    90  800001 800001  328 328 2 3
                    260 0xffffffff 0xffffffff 0xffffffff 0xffffffff 0xffffffff 0xffffffff>;
		cpu_cali_a=<0>;
		idle_interval=<1000>;
        use_virtual_thermal;
        freq_sample_period=<30>;
        report_time=<1 10 30 60>;         /* based on freq_sample_period */
        cpu_virtual=<
             500000  40  40  40  40
             600000  45  55  60  65
             800000  50  60  65  70
            1000000  55  65  70  75
            1200000  60  70  75  80
            1400000  65  75  80  85
        >;
        gpu_virtual=<
            183      40  40  40  40
            251      40  45  50  55
            319      50  60  65  70
            426      55  65  70  75
            511      60  70  75  80
        >;
	};

//******************************************************************************
///     -       Sensors
//$$ MODULE="Sensors"
//$$ DEVICE="sensor"
//$$ L2 PROP_STR = "status"
    sensor{
		compatible = "amlogic,aml_sensor";
		status = "okay";

//$$ DEVICE="mc32x0"
//$$ L2 PROP_STR = "status"
//$$ L2 PROP_U32 = "address"
//$$ L2 PROP_STR = "i2c_bus"
        mc32x0{
            dev_name = "mc32x0";
            status = "disabled";
            address = <0x4c>;
            i2c_bus = "i2c_bus_b";
            acc_dir = <0x1111>;
        };
//$$ DEVICE="mma7660"
//$$ L2 PROP_STR = "status"
//$$ L2 PROP_U32 = "address"
//$$ L2 PROP_STR = "i2c_bus"
        mma7660{
            dev_name = "mma7660";
            status = "disabled";
            address = <0x4c>;
            i2c_bus = "i2c_bus_b";
       };
//$$ DEVICE="stk8313"
//$$ L2 PROP_STR = "status"
//$$ L2 PROP_U32 = "address"
//$$ L2 PROP_STR = "i2c_bus"
        stk831x{
            dev_name = "stk8313";
            status = "okay";
            address = <0x22>;
            i2c_bus = "i2c_bus_b";
            acc_dir = <0x0101>;
        };
    };

}; /* end of root */
